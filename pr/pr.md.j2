---
marp: true
title: XXX
theme: default
headingDivider: 3
#paginate: true
auto-scaling: true
size: 16:9
style: |
  /* Slide numbering using CSS counters */
  /* Reset the counter at the document root */

  section {
    font-family: 'IBM Plex Sans';
    font-size: 25pt;
    display: inherit;
    #padding-top: 25pt;
    /* ensure pseudo-element positions correctly */
    position: relative;
    overflow: visible;
  }

{% set counter = namespace(n=1) %}
{% macro slide_style() -%}
  <style scoped>
  /* Large blurred pastel counter in the background of each slide */
  section::before {
    content: "{{counter.n}}";
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(40%, -40%);
    font-family: 'Bodoni Moda', cursive;
    font-size: 700pt;
    line-height: 1;
    color: rgba(255, 200, 210, 0.55); /* pastel pink */
    #filter: blur(8px);
    opacity: 0.4;
    z-index: 0;
    pointer-events: none;
    white-space: nowrap;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Keep slide content above the background digit */
  section > * {
    position: relative;
    z-index: 1;
  }
  </style>
{% set counter.n = counter.n + 1 %}
{%- endmacro %}

---
{{ slide_style() }}

# A Generic Schema Evolution Approach for NoSQL and Relational Databases

<!-- _class: lead  -->
Alberto Hernández Chillón, Meike Klettke,
**Diego Sevilla Ruiz**, Jesús Garcı́a Molina

Jornadas de Ingeniería del Software y Bases de Datos,
Córdoba. 2025


## Almacenamiento

{{ slide_style() }}

<!-- _class: invert
-->

<style scoped>
  h2 {
    padding: 10%;
    font-size: 70pt;
  }
</style>


### Introducción

{{ slide_style() }}

<style scoped>
  section { font-size: 22pt; }
</style>

- El almacenamiento forma parte del concepto de estado de una aplicación o servicio
- Las principales dimensiones que valoramos para escoger un tipo de almacenamiento u otro son:
  - Unidad de acceso  mímina
  - Métricas y valores de rendimiento
  - Forma de acceso, concurrencia
  - Elasticidad
  - Disponibilidad
  - Capacidades extra (ej: versionado, ciclo de vida)


## Almacenamiento a nivel de bloque

{{ slide_style() }}

<!-- _class: invert
-->

<style scoped>
  h2 {
    padding: 10%;
    font-size: 70pt;
  }
</style>


### S3: PUT de un objeto
{{ slide_style() }}
- PUT sube un objeto a un *Bucket*
- Se puede subir de una vez o *multipart*
- Ejemplo:

```python
import re
```

{{ generate_code_block('python', '''
import boto3
S3API = boto3.client("s3", region_name="us-east-1")
bucket_name= "samplebucket"
filename = "/resources/website/core.css"
S3API.upload_file(filename, bucket_name, "core.css",
        ExtraArgs={"ContentType": "text/css",
                   "CacheControl": "max-age=0"})'''
                   ) }}
---
{{ slide_style() }}
<style scoped>
  pre {
    background: #f4f4f4;
    padding: 10px;
    font-size: 300%;
    border: 1px solid #ddd;
    border-radius: 5px;
  }
</style>

<pre>
abc
</pre>


### Other section
{{ slide_style() }}
hello