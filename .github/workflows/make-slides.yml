name: Makefile Slides CI

# CI workflow to build the PDF slides only. Uses docker:dind so the
# project's scripts can call the Marp CLI via Docker. Caches pip to
# speed up repeated runs.
on:
  push:
    branches: [ 'main' ]
    paths:
      - 'pr/**'
  pull_request:
    branches: [ 'main' ]
    paths:
      - 'pr/**'

jobs:

  build-presentation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pr
    services:
      docker:
        image: docker:24-dind
        options: --privileged
    env:
      DOCKER_HOST: tcp://localhost:2376
      DOCKER_TLS_CERTDIR: \"\"
    steps:

    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Docker CLI
      run: |
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce-cli containerd.io docker-compose-plugin

    - name: Wait for Docker daemon
      run: |
        set -e
        echo "Waiting for Docker daemon at $DOCKER_HOST..."

        # Test docker connectivity
        for i in {1..30}; do
          if docker info >/dev/null 2>&1; then
            echo "Docker daemon is ready"
            docker version
            exit 0
          fi
          echo "Still waiting for docker daemon... ($i)"
          sleep 2
        done

        echo "Failed to connect to Docker daemon after 60 seconds"
        echo "DOCKER_HOST: $DOCKER_HOST"
        echo "DOCKER_TLS_CERTDIR: $DOCKER_TLS_CERTDIR"
        exit 1

    - name: Cache/restore Marp Docker image
      uses: actions/cache@v4
      id: marp-image-cache
      with:
        path: .cache/docker/marpteam_marp-cli_latest.tar
        key: docker-image-marpteam-marp-cli-latest

    - name: Load or pull Marp image
      run: |
        mkdir -p .cache/docker
        TAR=.cache/docker/marpteam_marp-cli_latest.tar
        if [ -f "$TAR" ]; then
          echo "Loading Marp image from cache..."
          docker load -i "$TAR"
        else
          echo "Cache miss: pulling Marp image and saving to cache..."
          docker pull marpteam/marp-cli:latest
          docker save -o "$TAR" marpteam/marp-cli:latest
        fi

    - name: Build PDF only (Makefile)
      run: |
        # generate only the PDF (uses Marp via Docker)
        make pdf

    - name: Publish artifacts PDFs
      uses: actions/upload-artifact@v4
      with:
        name: presentacion
        path: pr/pr_slides.pdf
