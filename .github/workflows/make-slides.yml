name: Makefile Slides CI

# CI workflow to build the PDF slides only. Uses docker:dind so the
# project's scripts can call the Marp CLI via Docker. Caches pip to
# speed up repeated runs.
"on":
  push:
    branches: [ 'main' ]
    paths:
      - 'pr/**'
  pull_request:
    branches: [ 'main' ]
    paths:
      - 'pr/**'

jobs:

  build-presentation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pr
    services:
      docker:
        image: docker:24-dind
        options: --privileged
        ports:
          - 2375:2375
    env:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_TLS_VERIFY: "0"
    steps:

    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Docker CLI
      run: |
        sudo apt-get update
        # Install a lightweight docker client (docker.io) so scripts can call `docker`
        sudo apt-get install -y docker.io

    - name: Wait for Docker daemon
      run: |
        set -e
        echo "Waiting for Docker daemon at $DOCKER_HOST..."
        for i in {1..60}; do
          if docker -H "$DOCKER_HOST" info >/dev/null 2>&1; then
            echo "Docker is ready"
            break
          fi
          echo "Still waiting for docker... ($i)"
          sleep 1
        done

    - name: Cache/restore Marp Docker image
      uses: actions/cache@v4
      id: marp-image-cache
      with:
        path: .cache/docker/marpteam_marp-cli_latest.tar
        key: docker-image-marpteam-marp-cli-latest

    - name: Load or pull Marp image
      run: |
        mkdir -p .cache/docker
        TAR=.cache/docker/marpteam_marp-cli_latest.tar
        if [ -f "$TAR" ]; then
          echo "Loading Marp image from cache..."
          docker -H "$DOCKER_HOST" load -i "$TAR"
        else
          echo "Cache miss: pulling Marp image and saving to cache..."
          docker -H "$DOCKER_HOST" pull marpteam/marp-cli:latest
          docker -H "$DOCKER_HOST" save -o "$TAR" marpteam/marp-cli:latest
        fi
      env:
        DOCKER_HOST: ${{ env.DOCKER_HOST }}

    - name: Build PDF only (Makefile)
      run: |
        # generate only the PDF (uses Marp via Docker)
        make pdf
      env:
        DOCKER_HOST: ${{ env.DOCKER_HOST }}

    - name: Publish artifacts PDFs
      uses: actions/upload-artifact@v4
      with:
        name: presentacion
        path: pr_slides.pdf
